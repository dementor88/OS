Copying tests/userprog/read-zero into /tmp/yc1gyOiSi4.dsk...
Copying ../../tests/userprog/sample.txt into /tmp/yc1gyOiSi4.dsk...
Writing command line to /tmp/32HpDYsR2j.dsk...
squish-pty bochs -q
Kernel command line: -q -f put read-zero put sample.txt run read-zero
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
373 pages available in user pool.
Calibrating timer...  102,400 loops/s.
hd0:0: detected 1,008 sector (504 kB) disk, model "Generic 1234", serial "BXHD00011"
hd0:1: detected 4,032 sector (1 MB) disk, model "Generic 1234", serial "BXHD00012"
hd1:0: detected 1,008 sector (504 kB) disk, model "Generic 1234", serial "BXHD00021"
Formatting file system...done.
Boot complete.
Putting 'read-zero' into the file system...
Putting 'sample.txt' into the file system...
Executing 'read-zero':
Execution of 'read-zero' complete.
Timer: 240 ticks
Thread: 31 idle ticks, 211 kernel ticks, 5 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 86 reads, 160 writes
hd1:0: 75 reads, 0 writes
Console: 811 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc010aba5
 cr2=00000001 error=00000000
 eax=00000001 ebx=00000300 ecx=0804bae0 edx=00000012
 esi=c011cfb0 edi=0804baf3 esp=00000000 ebp=c011cf74
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0107576 0xc010aa9f 0xc010ab59 0xc0101805 0xc01019db 0xc010aba5 0xc0101805 0xc01019db 0x804a0c9 0x804823c 0x804826d 0x8048136 0x8048720.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Kernel PANIC recursion at ../../filesys/inode.c:335 in inode_allow_write().
Page fault at 0xfcPowering off...
