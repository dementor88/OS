FAIL
Kernel panic in run: PANIC at ../../filesys/inode.c:336 in inode_allow_write(): assertion `inode->deny_write_cnt <= inode->open_cnt' failed.
Call stack: 0xc0107596 0xc010c9dc 0xc010bd59 0xc010bbe3 0xc010b243 0xc010ae0f 0xc0101825 0xc01019fb 0x804a0ed 0x80480fa 0x8048133 0x804870c
Translation of call stack:
In kernel.o:
0xc0107596: debug_panic (.../../lib/kernel/debug.c:34)
0xc010c9dc: inode_allow_write (...../../filesys/inode.c:337)
0xc010bd59: file_allow_write (.../../../filesys/file.c:141)
0xc010bbe3: file_close (...d/../../filesys/file.c:51)
0xc010b243: sys_close (...../userprog/syscall.c:267)
0xc010ae0f: syscall_handler (...../userprog/syscall.c:102)
0xc0101825: intr_handler (..../threads/interrupt.c:361)
0xc01019fb: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/close-twice:
0x0804a0ed: close (...../lib/user/syscall.c:141)
0x080480fa: test_main (...userprog/close-twice.c:18)
0x08048133: main (...ild/../../tests/main.c:13)
0x0804870c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
